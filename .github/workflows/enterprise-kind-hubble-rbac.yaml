name: Enterprise Hubble RBAC (enterprise-hubble-rbac)

# Any change in triggers needs to be reflected in the concurrency group.
on:
  pull_request:
    types:
      - opened
      - synchronize
      - reopened
    paths-ignore:
      - 'Documentation/**'
      - 'test/**'

permissions: read-all

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.event.after }}
  cancel-in-progress: true

env:
  helm_chart_repo: oci://quay.io/isovalent-charts-dev/cilium
  kind_config: ".github/kind-config-enterprise-hubble-rbac.yaml"

  # renovate: datasource=helm depName=dex registryUrl=https://charts.dexidp.io
  DEX_VERSION: 0.19.1
  # renovate: datasource=helm depName=ingress-nginx registryUrl=https://kubernetes.github.io/ingress-nginx
  INGRESS_NGINX_VERSION: 4.11.2


jobs:
  test-hubble-rbac:
    name: Hubble RBAC E2E test
    runs-on: ubuntu-latest
    timeout-minutes: 45
    steps:
      - name: Collect Workflow Telemetry
        uses: catchpoint/workflow-telemetry-action@94c3c3d9567a0205de6da68a76c428ce4e769af1 # v2.0.0
        with:
          comment_on_pr: false

      - name: Checkout code
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7
        with:
          # checkout pull request head ref so that print-chart-version.sh prints the correct chart version.
          ref: ${{ github.event.pull_request.head.ref }}
          # required for git describe
          fetch-depth: 0

      - name: Set Environment Variables
        uses: ./.github/actions/set-env-variables

      - name: Set up job variables
        id: vars
        run: |
          version=$(bash contrib/scripts/print-chart-version.sh)
          echo "version=${version}" >> $GITHUB_OUTPUT
          echo ${version}

          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            SHA="${{ inputs.SHA }}"
          else
            SHA="${{ github.event.pull_request.head.sha }}"
          fi

          echo sha=${SHA} >> $GITHUB_OUTPUT

      - name: Create kind cluster
        uses: helm/kind-action@0025e74a8c7512023d06dc019c617aa3cf561fde # v1.10.0
        with:
          version: ${{ env.KIND_VERSION }}
          node_image: ${{ env.KIND_K8S_IMAGE }}
          kubectl_version: ${{ env.KIND_K8S_VERSION }}
          config: ${{ env.kind_config }}
          cluster_name: hubble-rbac
          wait: 0 # The control-plane never becomes ready, since no CNI is present

      - name: Install Cilium CLI
        uses: cilium/cilium-cli@62bd4511031211b50a4623870955a5ad27b43e3b # v0.16.16
        with:
          skip-build: ${{ env.CILIUM_CLI_SKIP_BUILD }}
          image-repo: ${{ env.CILIUM_CLI_IMAGE_REPO }}
          image-tag: ${{ steps.vars.outputs.sha }}

      - name: Install Go
        uses: actions/setup-go@0a12ed9d6a96ab950c8f026ed9f722fe0da7ef32 # v5.0.2
        with:
          # renovate: datasource=golang-version depName=go
          go-version: 1.22.7

      - name: Wait for Helm dev chart to be available
        timeout-minutes: 30
        shell: bash
        run: |
          echo ${{ secrets.QUAY_CHARTS_DEV_PASSWORD }} | helm registry login quay.io -u ${{ secrets.QUAY_CHARTS_DEV_USERNAME }} --password-stdin
          until helm pull ${{ env.helm_chart_repo }} --version ${{ steps.vars.outputs.version }}; do sleep 30s; done

      - name: Setup
        if: ${{ always() }}
        run: |
          ./enterprise/test/hubble-rbac/setup.sh
        shell: bash
        env:
          CILIUM_VERSION: ${{ steps.vars.outputs.version }}
          CILIUM_CHART_REPO: ${{ env.helm_chart_repo }}
          KIND_CTRLPLANE_NAME: hubble-rbac-control-plane

      - name: Port forward Relay
        run: |
          cilium hubble port-forward&
          sleep 10s
          [[ $(pgrep -f "cilium.*hubble.*port-forward|kubectl.*port-forward.*hubble-relay" | wc -l) == 2 ]]

      - name: Run tests
        run: |
          go test -tags enterprise_hubble_rbac_e2e ./enterprise/test/hubble-rbac
        shell: bash
        env:
          HUBBLE_TLS: "true"
          HUBBLE_TLS_ALLOW_INSECURE: "true"
          HUBBLE_ISSUER: "http://dex.test"
          HUBBLE_CLIENT_ID: "test-client-id"
          HUBBLE_CLIENT_SECRET: "test-client-secret"
          ADMIN_OIDC_USER: "admin@example.com"
          ADMIN_OIDC_PASSWORD: "password"
          DEMO_OIDC_USER: "demo@example.com"
          DEMO_OIDC_PASSWORD: "demo"

      - name: Cleanup
        if: ${{ always() }}
        run: |
          cilium status
          kubectl get pods --all-namespaces -o wide
          echo ""
          echo "===Dex Logs==="
          kubectl -n dex logs deployments/dex
          echo ""
          echo "===Nginx Logs==="
          kubectl -n ingress-nginx logs deployments/ingress-nginx-controller
          cilium sysdump --output-filename cilium-sysdump-out --hubble-flows-count 10000
        shell: bash {0} # Disable default fail-fast behaviour so that all commands run independently

      - name: Upload artifacts
        if: ${{ !success() }}
        uses: actions/upload-artifact@834a144ee995460fba8ed112a2fc961b36a5ec5a # v4.3.6
        with:
          name: cilium-sysdumps
          path: cilium-sysdump-*.zip
          retention-days: 5
