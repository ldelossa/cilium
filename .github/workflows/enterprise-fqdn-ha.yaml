name: Enterprise FQDN HA (ci-fqdn-ha)

# Any change in triggers needs to be reflected in the concurrency group.
on:
  workflow_dispatch:
    inputs:
      PR-number:
        description: "Pull request number."
        required: true
      context-ref:
        description: "Context in which the workflow runs. If PR is from a fork, will be the PR target branch (general case). If PR is NOT from a fork, will be the PR branch itself (this allows committers to test changes to workflows directly from PRs)."
        required: true
      SHA:
        description: "SHA under test (head of the PR branch)."
        required: true
      extra-args:
        description: "[JSON object] Arbitrary arguments passed from the trigger comment via regex capture group. Parse with 'fromJson(inputs.extra-args).argName' in workflow."
        required: false
        default: '{}'

  # Run every 6 hours
  schedule:
    - cron: '0 4/6 * * *'

# By specifying the access of one of the scopes, all of those that are not
# specified are set to 'none'.
permissions:
  # To be able to access the repository with actions/checkout
  contents: read
  # To allow retrieving information from the PR API
  pull-requests: read
  # To be able to set commit status
  statuses: write

concurrency:
  # Structure:
  # - Workflow name
  # - Event type
  # - A unique identifier depending on event type:
  #   - schedule: SHA
  #   - workflow_dispatch: PR number
  #
  # This structure ensures a unique concurrency group name is generated for each
  # type of testing, such that re-runs will cancel the previous run.
  group: |
    ${{ github.workflow }}
    ${{ github.event_name }}
    ${{
      (github.event_name == 'schedule' && github.sha) ||
      (github.event_name == 'workflow_dispatch' && github.event.inputs.PR-number)
    }}
  cancel-in-progress: true

env:
  cilium_cli_ci_version:
  cilium_dnsproxy_chart_version: 1.14.1
  # renovate: datasource=github-releases depName=kubernetes-sigs/kind
  kind_version: v0.20.0
  kind_config: .github/kind-config.yaml

jobs:
  commit-status-start:
    name: Commit Status Start
    runs-on: ubuntu-latest
    steps:
      - name: Set initial commit status
        uses: myrotvorets/set-commit-status-action@38f3f27c7d52fb381273e95542f07f0fba301307 # v2.0.0
        with:
          sha: ${{ inputs.SHA || github.sha }}

  installation-and-connectivity:
    name: Setup & Test
    runs-on: ubuntu-latest-4cores-16gb
    timeout-minutes: 120
    steps:
      - name: Checkout context ref (trusted)
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
        with:
          ref: ${{ inputs.context-ref || github.sha }}
          persist-credentials: false

      - name: Set Environment Variables
        uses: ./.github/actions/set-env-variables

      - name: Set up job variables for GHA environment
        id: vars
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            SHA="${{ inputs.SHA }}"
          else
            SHA="${{ github.sha }}"
          fi

          CILIUM_INSTALL_DEFAULTS="--chart-directory=install/kubernetes/cilium \
            --namespace=kube-system \
            --helm-set=debug.enabled=true \
            --helm-set=image.repository=quay.io/${{ env.QUAY_ORGANIZATION_DEV }}/cilium-ci \
            --helm-set=image.useDigest=false \
            --helm-set=image.tag=${SHA} \
            --helm-set=operator.image.repository=quay.io/${{ env.QUAY_ORGANIZATION_DEV }}/operator \
            --helm-set=operator.image.suffix=-ci \
            --helm-set=operator.image.tag=${SHA} \
            --helm-set=operator.image.useDigest=false \
            --helm-set-string=extraConfig.external-dns-proxy=true \
          "

          CONNECTIVITY_TEST_DEFAULTS="--hubble=false --flow-validation=disabled --collect-sysdump-on-failure"

          echo cilium_install_defaults="${CILIUM_INSTALL_DEFAULTS}" >> $GITHUB_OUTPUT
          echo connectivity_test_defaults=${CONNECTIVITY_TEST_DEFAULTS} >> $GITHUB_OUTPUT

          echo sha=${SHA} >> $GITHUB_OUTPUT

      - name: Install Cilium CLI
        uses: cilium/cilium-cli@b0955d62f5d0fd22449c568c6be921f46b66f603 # v0.15.22
        with:
          repository: ${{ env.CILIUM_CLI_RELEASE_REPO }}
          release-version: ${{ env.CILIUM_CLI_VERSION }}
          ci-version: ${{ env.cilium_cli_ci_version }}

      - name: Create kind cluster
        uses: helm/kind-action@dda0770415bac9fc20092cacbc54aa298604d140 # v1.8.0
        with:
          version: ${{ env.kind_version }}
          config: ${{ env.kind_config }}

      - name: Wait for images to be available
        timeout-minutes: 30
        shell: bash
        run: |
          for image in cilium-ci operator-generic-ci hubble-relay-ci; do
            until docker manifest inspect quay.io/${{ env.QUAY_ORGANIZATION_DEV }}/$image:${{ steps.vars.outputs.sha }} &> /dev/null; do sleep 45s; done
          done

      # Warning: since this is a privileged workflow, subsequent workflow job
      # steps must take care not to execute untrusted code.
      - name: Checkout pull request branch (NOT TRUSTED)
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
        with:
          ref: ${{ steps.vars.outputs.sha }}
          persist-credentials: false

      - name: Install Cilium
        run: |
          cilium install ${{ steps.vars.outputs.cilium_install_defaults }}
          cilium status --wait --namespace kube-system

      - name: Install Cilium DNS proxy
        run: |
          helm repo add isovalent https://helm.isovalent.com
          # TODO: once the cilium-dnsproxy chart is moved to isovalent/cilium we should use the chart and image version built in CI.
          helm install -n kube-system cilium-dnsproxy isovalent/cilium-dnsproxy \
            --version ${{ env.cilium_dnsproxy_chart_version }} \
            --set metrics.enabled=true \
            --set debug=true
          kubectl rollout status -n kube-system ds/cilium-dnsproxy --watch

      - name: Run connectivity fqdn test
        run: |
          cilium connectivity test --namespace kube-system --test to-fqdn,external-cilium-dns-proxy

      - name: Apply policy
        run: |
          cat << EOF > fqdn-policy-egress.yaml
          apiVersion: cilium.io/v2
          kind: CiliumNetworkPolicy
          metadata:
            name: client-egress-to-fqdns-cilium-io
            namespace: cilium-test
          spec:
            egress:
            - toFQDNs:
              - matchName: cilium.io
            - toEndpoints:
              - matchLabels:
                  k8s:io.kubernetes.pod.namespace: kube-system
                  k8s:k8s-app: kube-dns
              - matchLabels:
                  k8s:io.kubernetes.pod.namespace: kube-system
                  k8s:k8s-app: coredns
              toPorts:
              - ports:
                - port: "53"
                  protocol: ANY
                rules:
                  dns:
                  - matchPattern: '*'
                  - matchPattern: '*.-name.com'
            endpointSelector:
              matchLabels:
                any:kind: client
          EOF

          kubectl apply -f fqdn-policy-egress.yaml
          sleep 10

      - name: Run tests before Cilium pods are down
        run: |
          cat << EOF > test-fqdn-ha.sh
          kubectl exec -n cilium-test deploy/client -- nslookup cilium.io
          kubectl exec -n cilium-test deploy/client -- curl --max-time 10 cilium.io

          kubectl exec -n cilium-test deploy/client -- nslookup google.com

          if kubectl exec -n cilium-test deploy/client -- curl --max-time 10 google.com ; then
            echo "google.com reached despite being blocked by fqdn policy"
            exit 1
          fi
          EOF

          chmod 755 ./test-fqdn-ha.sh
          ./test-fqdn-ha.sh

      - name: Kill Cilium pods
        run: |
          KUBE_EDITOR="sed -i s/cilium-ci/pc-load-letter-no-such-image/g" kubectl -n kube-system edit ds/cilium

      - name: Run tests after Cilium pods are down
        run: |
          ./test-fqdn-ha.sh

      - name: Post-test information gathering
        if: ${{ !success() }}
        run: |
          kubectl get pods --all-namespaces -o wide
          cilium status
          cilium sysdump --output-filename cilium-sysdump-out
        shell: bash {0} # Disable default fail-fast behaviour so that all commands run independently

      - name: Upload artifacts
        if: ${{ !success() }}
        uses: actions/upload-artifact@5d5d22a31266ced268874388b861e4b58bb5c2f3 # v4.3.1
        with:
          name: cilium-sysdumps
          path: cilium-sysdump-*.zip
          retention-days: 5

  commit-status-final:
    name: Commit Status Final
    if: ${{ always() }}
    needs: installation-and-connectivity
    runs-on: ubuntu-latest
    steps:
      - name: Set final commit status
        uses: myrotvorets/set-commit-status-action@38f3f27c7d52fb381273e95542f07f0fba301307 # v2.0.0
        with:
          sha: ${{ inputs.SHA || github.sha }}
          status: ${{ needs.installation-and-connectivity.result }}
