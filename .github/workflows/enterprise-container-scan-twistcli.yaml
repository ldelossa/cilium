name: Container vulnerability scan (twistcli)
on:
  schedule:
    - cron: "0 4 * * *"
  workflow_dispatch:

permissions: read-all

jobs:
  container-scan-twistcli:
    if: github.repository_owner == 'isovalent'
    name: scan-container
    runs-on: ubuntu-22.04
    continue-on-error: true
    strategy:
      matrix:
        image: [
          {name: cilium, dockerfile: ./images/cilium/Dockerfile},
          {name: clustermesh-apiserver, dockerfile: ./images/clustermesh-apiserver/Dockerfile},
          {name: docker-plugin, dockerfile: ./images/cilium-docker-plugin/Dockerfile},
          {name: hubble-relay, dockerfile: ./images/hubble-relay/Dockerfile},
          {name: operator-generic, dockerfile: ./images/operator/Dockerfile},
        ]
        branch: [v1.12-ce, v1.13-ce, v1.14-ce, v1.15-ce]
        include:
          - image: {name: kvstoremesh, dockerfile: ./images/kvstoremesh/Dockerfile}
            branch: v1.14-ce
    steps:
      - name: Checkout code to scan
        uses: actions/checkout@0ad4b8fadaa221de15dcec353f45205ec38ea70b # v4.1.4
        with:
          ref: ${{ matrix.branch }}
          persist-credentials: false
      - name: Checkout latest VEX data
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4
        with:
          sparse-checkout: |
            .openvex.json
          sparse-checkout-cone-mode: false
          path: isovalent-cilium-vex
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@d70bba72b1f3fd22344832f00baa16ece964efeb # v3.3.0
      - name: Build local container
        uses: docker/build-push-action@2cdde995de11925a030ce8070c3d77a52ffcf1c0 # v5.3.0
        with:
          context: .
          tags: ${{ matrix.image.name }}:${{ matrix.branch }}
          push: false
          load: true
          file: ${{ matrix.image.dockerfile }}
          build-args: |
            OPERATOR_VARIANT=${{ matrix.image.name }}
      - name: Scan image
        id: scan-image
        uses: PaloAltoNetworks/prisma-cloud-scan@1f38c94d789ff9b01a4e80070b442294ebd3e362 # v1
        with:
          pcc_console_url: https://us-east1.cloud.twistlock.com/us-1-111576212
          pcc_user: c2cb4b51-b118-44a6-a13b-e1f8647f2692
          pcc_pass: ${{ secrets.TWISTCLI_PASSWORD }} 
          image_name: ${{ matrix.image.name }}:${{ matrix.branch }}
      - name: Set up Go
        uses: actions/setup-go@0c52d547c9bc32b1aa3301fd7a9cb496313a4491 # v5
      - name: Install vexctl
        run: go install github.com/openvex/vexctl@latest
      - name: Filter false positives
        run: vexctl filter ${{ steps.scan-image.outputs.sarif_file }} isovalent-cilium-vex/.openvex.json > filtered-results.json
      - name: Upload SARIF scan results
        uses: actions/upload-artifact@1746f4ab65b179e0ea60a494b83293b640dd5bba # v4
        with:
          name: ${{ matrix.image.name }}-${{ matrix.branch }}.sarif.json
          path: filtered-results.json
          retention-days: 3
      - name: Output scan results
        run: >
          OUTPUT=$(jq -r '.runs[].results[] as $r |
                   .runs[].tool.driver.rules[] | select(.id == $r.ruleId) |
                   [.id, $r.locations[].physicalLocation.artifactLocation.uri, .shortDescription.text] |
                   @tsv' filtered-results.json
                  )
          if [[ ! -z "$OUTPUT" ]]; then
            echo "$OUTPUT"
            exit 1
          fi
