name: EnterpriseKind

# Any change in triggers needs to be reflected in the concurrency group.
on:
  pull_request:
    types:
      - opened
      - synchronize
      - reopened
    paths-ignore:
      - 'Documentation/**'
      - 'test/**'

permissions: read-all

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.event.after }}
  cancel-in-progress: true

env:
  helm_chart_repo: oci://quay.io/isovalent-charts-dev/cilium
  kind_config: .github/kind-config.yaml
  # renovate: datasource=github-releases depName=yannh/kubeconform
  kubeconform_version: v0.6.7

jobs:
  installation-and-connectivity:
    name: Installation and connectivity
    runs-on: ubuntu-latest
    timeout-minutes: 45
    steps:
      - name: Collect Workflow Telemetry
        uses: catchpoint/workflow-telemetry-action@94c3c3d9567a0205de6da68a76c428ce4e769af1 # v2.0.0
        with:
          comment_on_pr: false

      - name: Checkout code
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7
        with:
          # checkout pull request head ref so that print-chart-version.sh prints the correct chart version.
          ref: ${{ github.event.pull_request.head.ref }}
          # required for git describe
          fetch-depth: 0

      - name: Set Environment Variables
        uses: ./.github/actions/set-env-variables

      - name: Set up job variables
        id: vars
        run: |
          version=$(bash contrib/scripts/print-chart-version.sh)
          echo "version=${version}" >> $GITHUB_OUTPUT
          echo ${version}

          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            SHA="${{ inputs.SHA }}"
          else
            SHA="${{ github.event.pull_request.head.sha }}"
          fi

          echo sha=${SHA} >> $GITHUB_OUTPUT

      - name: Create kind cluster
        uses: helm/kind-action@0025e74a8c7512023d06dc019c617aa3cf561fde # v1.10.0
        with:
          version: ${{ env.KIND_VERSION }}
          node_image: ${{ env.KIND_K8S_IMAGE }}
          kubectl_version: ${{ env.KIND_K8S_VERSION }}
          config: ${{ env.kind_config }}
          wait: 0 # The control-plane never becomes ready, since no CNI is present

      - name: Install Cilium CLI
        uses: cilium/cilium-cli@fff38e882846c03f1720dad476e459323275ab9c # v0.16.17
        with:
          skip-build: ${{ env.CILIUM_CLI_SKIP_BUILD }}
          image-repo: ${{ env.CILIUM_CLI_IMAGE_REPO }}
          image-tag: ${{ steps.vars.outputs.sha }}

      - name: Run go mod tidy in enterprise/cilium-cli
        if: github.event.pull_request.base.ref == github.event.repository.default_branch
        run: |
          cd enterprise/cilium-cli
          go mod tidy
          test -z "$(git status --porcelain)" || (echo "please run 'go mod tidy' and submit your changes"; exit 1)

      - name: Install kubeconform
        run: |
          wget -qO- https://github.com/yannh/kubeconform/releases/download/${{ env.kubeconform_version }}/kubeconform-linux-amd64.tar.gz | tar xvz -C /tmp
          sudo mv /tmp/kubeconform /usr/local/bin

      - name: Lint FQDN Proxy Helm chart
        run: |
          cd enterprise/fqdn-proxy/installation
          ./test.sh

      - name: Wait for Helm dev chart to be available
        timeout-minutes: 30
        shell: bash
        run: |
          echo ${{ secrets.QUAY_CHARTS_DEV_PASSWORD }} | helm registry login quay.io -u ${{ secrets.QUAY_CHARTS_DEV_USERNAME }} --password-stdin
          until helm pull ${{ env.helm_chart_repo }} --version ${{ steps.vars.outputs.version }}; do sleep 30s; done

      - name: Install Cilium
        run: |
          helm install -n kube-system cilium ${{ env.helm_chart_repo }} \
            --version ${{ steps.vars.outputs.version }} \
            --set-string extraConfig.external-dns-proxy=true \
            --set='enterprise.featureGates={AllAlphaFeatures,AllBetaFeatures,AllLimitedFeatures}'
          kubectl rollout status -n kube-system ds/cilium --watch

      - name: Install FQDN proxy
        run: |
          helm install -n kube-system cilium-dnsproxy ./enterprise/fqdn-proxy/installation \
            --set image.repository=quay.io/${{ env.QUAY_ORGANIZATION_DEV }}/cilium-dnsproxy-ci \
            --set image.tag=${{ steps.vars.outputs.sha }} \
            --set metrics.enabled=true \
            --set debug=true
          kubectl rollout status -n kube-system ds/cilium-dnsproxy --watch

      - name: Run enterprise tests
        run: |
          cilium version
          cilium connectivity test --debug --collect-sysdump-on-failure

      - name: Cleanup
        if: ${{ always() }}
        run: |
          cilium status
          kubectl get pods --all-namespaces -o wide
          cilium sysdump --output-filename cilium-sysdump-out --hubble-flows-count 10000
        shell: bash {0} # Disable default fail-fast behaviour so that all commands run independently

      - name: Upload artifacts
        if: ${{ !success() }}
        uses: actions/upload-artifact@50769540e7f4bd5e21e526ee35c689e35e0d6874 # v4.4.0
        with:
          name: cilium-sysdumps
          path: cilium-sysdump-*.zip
          retention-days: 5
