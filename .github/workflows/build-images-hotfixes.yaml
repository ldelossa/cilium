name: Hot Fix Image Release Build

on:
  push:
    branches:
      - hf/v1.12-ce/**

permissions: write-all

env:
  ATLANTIS_VERSION: v1.0.0-alpha4.7

jobs:
  atlantis-gen:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Download atlantis
      uses: dsaltares/fetch-gh-release-asset@0.0.8
      with:
        repo: "isovalent/atlantis"
        version: "tags/${{ env.ATLANTIS_VERSION }}"
        file: "atlantis-.*-linux-amd64.tar.gz"
        regex: true
        token: ${{ secrets.ISOVALENT_BOT_READ_PRIVATE_REPOSITORIES }}

    - name: Download atlantis checksum file
      uses: dsaltares/fetch-gh-release-asset@0.0.8
      with:
        repo: "isovalent/atlantis"
        version: "tags/${{ env.ATLANTIS_VERSION }}"
        file: "atlantis-.*-linux-amd64.tar.gz.sha256sum"
        regex: true
        token: ${{ secrets.ISOVALENT_BOT_READ_PRIVATE_REPOSITORIES }}

    - uses: actions/setup-go@v3
      with:
        go-version-file: 'go.mod'

    - uses: actions/cache@v2
      with:
        path: |
          ~/.cache/go-build
          ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-

    - name: Run atlantis gen
      shell: bash
      run: |
        sha256sum --check atlantis-*-linux-amd64.tar.gz.sha256sum
        tar xf atlantis-*-linux-amd64.tar.gz
        mv atlantis /usr/local/bin
        # Atlantis needs to access private repos.
        git config --global url."https://${{ secrets.ISOVALENT_BOT_READ_PRIVATE_REPOSITORIES }}:@github.com/".insteadOf "https://github.com/"
        git config --global --add url."https://${{ secrets.ISOVALENT_BOT_READ_PRIVATE_REPOSITORIES }}:@github.com/".insteadOf "git@github.com:"
        atlantis version
        atlantis gen
        git status

    - name: Getting image tag
      id: tag
      run: |
        echo ::set-output name=tag::${GITHUB_REF##*/}

    - name: Push
      shell: bash
      run: |
        git config user.name "isovalent-bot"
        git config user.email "<>"
        git add go.mod go.sum api daemon pkg placeholder_root.go vendor
        if git diff --cached --exit-code > /dev/null ; then
            echo "Nothing to commit"
        else
            git commit -m "Run atlantis gen on ${{ steps.tag.outputs.tag }}"
            git checkout -b ${{ steps.tag.outputs.tag }}-gen
            git push origin ${{ steps.tag.outputs.tag }}-gen
        fi

  build-and-push:
    environment: release-developer-images
    runs-on: ubuntu-20.04
    needs: atlantis-gen
    strategy:
      matrix:
        include:
          - name: cilium
            dockerfile: ./images/cilium/Dockerfile

          - name: operator
            dockerfile: ./images/operator/Dockerfile

          - name: operator-aws
            dockerfile: ./images/operator/Dockerfile

          - name: operator-azure
            dockerfile: ./images/operator/Dockerfile

          - name: operator-alibabacloud
            dockerfile: ./images/operator/Dockerfile

          - name: operator-generic
            dockerfile: ./images/operator/Dockerfile

          - name: hubble-relay
            dockerfile: ./images/hubble-relay/Dockerfile

          - name: clustermesh-apiserver
            dockerfile: ./images/clustermesh-apiserver/Dockerfile

          - name: docker-plugin
            dockerfile: ./images/cilium-docker-plugin/Dockerfile

    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@dc7b9719a96d48369863986a06765841d7ea23f6

      - name: Login to quay.io
        uses: docker/login-action@49ed152c8eca782a232dede0303416e8f356c37b
        with:
          registry: quay.io
          username: ${{ secrets.QUAY_DEVELOPER_USERNAME }}
          password: ${{ secrets.QUAY_DEVELOPER_PASSWORD }}

      - name: Getting image tag
        id: tag
        run: |
          echo ::set-output name=tag::${GITHUB_REF##*/}

      - name: Checking if tag already exists
        id: tag-in-repositories
        shell: bash
        run: |
          if docker buildx imagetools inspect quay.io/${{ github.repository_owner }}/${{ matrix.name }}-dev:${{ steps.tag.outputs.tag }} &>/dev/null; then
            echo "Tag already exists!"
            exit 1
          fi

      - name: Checkout Source Code
        uses: actions/checkout@2541b1294d2704b0964813337f33b291d3f8596b
        with:
          persist-credentials: false
          ref: ${{ steps.tag.outputs.tag }}-gen

      - name: Release Build ${{ matrix.name }}
        uses: docker/build-push-action@c84f38281176d4c9cdb1626ffafcd6b3911b5d94
        id: docker_build_release
        with:
          context: .
          file: ${{ matrix.dockerfile }}
          push: true
          platforms: linux/amd64,linux/arm64
          tags: |
            quay.io/${{ github.repository_owner }}/${{ matrix.name }}-dev:${{ steps.tag.outputs.tag }}
            quay.io/${{ github.repository_owner }}/${{ matrix.name }}-ci:${{ github.sha }}
          build-args: |
            OPERATOR_VARIANT=${{ matrix.name }}

      - name: Image Release Digest
        shell: bash
        run: |
          mkdir -p image-digest/
          echo "## ${{ matrix.name }}" > image-digest/${{ matrix.name }}.txt
          echo "" >> image-digest/${{ matrix.name }}.txt
          echo "\`quay.io/${{ github.repository_owner }}/${{ matrix.name }}-dev:${{ steps.tag.outputs.tag }}@${{ steps.docker_build_release.outputs.digest }}\`" >> image-digest/${{ matrix.name }}.txt
          echo "\`quay.io/${{ github.repository_owner }}/${{ matrix.name }}-ci:${{ github.sha }}@${{ steps.docker_build_release.outputs.digest }}\`" >> image-digest/${{ matrix.name }}.txt
          echo "" >> image-digest/${{ matrix.name }}.txt

      # Upload artifact digests
      - name: Upload artifact digests
        uses: actions/upload-artifact@3cea5372237819ed00197afe530f5a7ea3e805c8
        with:
          name: image-digest ${{ matrix.name }}
          path: image-digest
          retention-days: 1

      - name: Send slack notification
        if: ${{ !success() && (github.event_name == 'schedule' || github.event_name == 'push') }}
        uses: 8398a7/action-slack@a74b761b4089b5d730d813fbedcd2ec5d394f3af
        with:
          status: ${{ job.status }}
          fields: repo,message,commit,author,action,eventName,ref,workflow,job,took # selectable (default: repo,message)
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

  image-digests:
    name: Display Digests
    runs-on: ubuntu-20.04
    needs: build-and-push
    steps:
      - name: Downloading Image Digests
        shell: bash
        run: |
          mkdir -p image-digest/

      - name: Download digests of all images built
        uses: actions/download-artifact@fb598a63ae348fa914e94cd0ff38f362e927b741
        with:
          path: image-digest/

      - name: Image Digests Output
        shell: bash
        run: |
          cd image-digest/
          find -type f | sort | xargs -d '\n' cat
