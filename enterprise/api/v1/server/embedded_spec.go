// Code generated by go-swagger; DO NOT EDIT.

// Copyright (C) Isovalent, Inc. - All Rights Reserved.
//
// NOTICE: All information contained herein is, and remains the property of
// Isovalent Inc and its suppliers, if any. The intellectual and technical
// concepts contained herein are proprietary to Isovalent Inc and its suppliers
// and may be covered by U.S. and Foreign Patents, patents in process, and are
// protected by trade secret or copyright law.  Dissemination of this information
// or reproduction of this material is strictly forbidden unless prior written
// permission is obtained from Isovalent Inc.

package server

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
)

var (
	// SwaggerJSON embedded version of the swagger document used at generation time
	SwaggerJSON json.RawMessage
	// FlatSwaggerJSON embedded flattened version of the swagger document used at generation time
	FlatSwaggerJSON json.RawMessage
)

func init() {
	SwaggerJSON = json.RawMessage([]byte(`{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "swagger": "2.0",
  "info": {
    "description": "Cilium Enterprise",
    "title": "Cilium Enterprise API",
    "version": "v1alpha1"
  },
  "basePath": "/v1enterprise",
  "paths": {
    "/healthz": {
      "get": {
        "summary": "Retrieve Cilium Enterprise health",
        "responses": {
          "200": {
            "description": "Success"
          },
          "404": {
            "description": "Cilium Enterprise API is not available",
            "x-go-name": "Disabled"
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "x-go-name": "Failure"
          }
        }
      }
    }
  },
  "definitions": {
    "Error": {
      "type": "string"
    }
  },
  "x-schemes": [
    "unix"
  ]
}`))
	FlatSwaggerJSON = json.RawMessage([]byte(`{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "swagger": "2.0",
  "info": {
    "description": "Cilium Enterprise",
    "title": "Cilium Enterprise API",
    "version": "v1alpha1"
  },
  "basePath": "/v1enterprise",
  "paths": {
    "/healthz": {
      "get": {
        "summary": "Retrieve Cilium Enterprise health",
        "responses": {
          "200": {
            "description": "Success"
          },
          "404": {
            "description": "Cilium Enterprise API is not available",
            "x-go-name": "Disabled"
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "x-go-name": "Failure"
          }
        }
      }
    }
  },
  "definitions": {
    "Error": {
      "type": "string"
    }
  },
  "x-schemes": [
    "unix"
  ]
}`))
}
