// Code generated by go-swagger; DO NOT EDIT.

// Copyright (C) Isovalent, Inc. - All Rights Reserved.
//
// NOTICE: All information contained herein is, and remains the property of
// Isovalent Inc and its suppliers, if any. The intellectual and technical
// concepts contained herein are proprietary to Isovalent Inc and its suppliers
// and may be covered by U.S. and Foreign Patents, patents in process, and are
// protected by trade secret or copyright law.  Dissemination of this information
// or reproduction of this material is strictly forbidden unless prior written
// permission is obtained from Isovalent Inc.

package server

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
)

var (
	// SwaggerJSON embedded version of the swagger document used at generation time
	SwaggerJSON json.RawMessage
	// FlatSwaggerJSON embedded flattened version of the swagger document used at generation time
	FlatSwaggerJSON json.RawMessage
)

func init() {
	SwaggerJSON = json.RawMessage([]byte(`{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "swagger": "2.0",
  "info": {
    "description": "Cilium Enterprise",
    "title": "Cilium Enterprise API",
    "version": "v1alpha1"
  },
  "basePath": "/v1enterprise",
  "paths": {
    "/config": {
      "get": {
        "tags": [
          "daemon"
        ],
        "summary": "Get configuration of enterprise-only features of Cilium daemon",
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/EnterpriseDaemonConfiguration"
            }
          }
        }
      }
    },
    "/healthz": {
      "get": {
        "summary": "Retrieve Cilium Enterprise health",
        "responses": {
          "200": {
            "description": "Success"
          },
          "404": {
            "description": "Cilium Enterprise API is not available",
            "x-go-name": "Disabled"
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "x-go-name": "Failure"
          }
        }
      }
    },
    "/network/attachment": {
      "get": {
        "tags": [
          "network"
        ],
        "summary": "Retrieve the network attachment for a pod",
        "parameters": [
          {
            "$ref": "#/parameters/network-pod-name"
          },
          {
            "$ref": "#/parameters/network-pod-namespace"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/NetworkAttachmentList"
            }
          },
          "500": {
            "description": "Network attachment error",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "x-go-name": "Failure"
          },
          "501": {
            "description": "Network attachment feature is disabled",
            "x-go-name": "Disabled"
          }
        }
      }
    }
  },
  "definitions": {
    "EnterpriseDaemonConfiguration": {
      "description": "The current configuration of any enterprise-only features",
      "type": "object",
      "properties": {
        "multi-network": {
          "description": "Indicates whether multi-network support is enabled",
          "type": "boolean"
        }
      }
    },
    "Error": {
      "type": "string"
    },
    "NetworkAttachmentElement": {
      "description": "A network attachment",
      "type": "object",
      "required": [
        "name"
      ],
      "properties": {
        "ipam": {
          "description": "IPAM parameters",
          "$ref": "#/definitions/NetworkAttachmentIPAMParameters"
        },
        "name": {
          "description": "Name of the network this pod is attached to",
          "type": "string"
        },
        "routes": {
          "description": "Network routes to set up for this network attachment inside the pod",
          "type": "array",
          "items": {
            "$ref": "#/definitions/NetworkAttachmentRoute"
          }
        }
      }
    },
    "NetworkAttachmentIPAMParameters": {
      "description": "IPAM parameters of a network attachment",
      "type": "object",
      "properties": {
        "ipam-pool": {
          "description": "Name of the IPAM pool this network attachment allocates from",
          "type": "string"
        }
      }
    },
    "NetworkAttachmentList": {
      "description": "List of network attachments",
      "properties": {
        "attachments": {
          "description": "Networks this pod is attached to",
          "type": "array",
          "items": {
            "$ref": "#/definitions/NetworkAttachmentElement"
          }
        },
        "pod-name": {
          "description": "Name of the pod which is attached to these networks",
          "type": "string"
        },
        "pod-namespace": {
          "description": "Namespace of the pod which is attached to these networks",
          "type": "string"
        }
      }
    },
    "NetworkAttachmentRoute": {
      "description": "Route for a network attachment",
      "type": "object",
      "properties": {
        "destination": {
          "description": "Route destination",
          "type": "string"
        },
        "gateway": {
          "description": "Route gateway",
          "type": "string"
        }
      }
    }
  },
  "parameters": {
    "network-pod-name": {
      "type": "string",
      "description": "Kubernetes pod name for which to query the network attachment",
      "name": "pod-name",
      "in": "query",
      "required": true
    },
    "network-pod-namespace": {
      "type": "string",
      "description": "Kubernetes pod namespace for which to query the network attachment",
      "name": "pod-namespace",
      "in": "query",
      "required": true
    }
  },
  "x-schemes": [
    "unix"
  ]
}`))
	FlatSwaggerJSON = json.RawMessage([]byte(`{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "swagger": "2.0",
  "info": {
    "description": "Cilium Enterprise",
    "title": "Cilium Enterprise API",
    "version": "v1alpha1"
  },
  "basePath": "/v1enterprise",
  "paths": {
    "/config": {
      "get": {
        "tags": [
          "daemon"
        ],
        "summary": "Get configuration of enterprise-only features of Cilium daemon",
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/EnterpriseDaemonConfiguration"
            }
          }
        }
      }
    },
    "/healthz": {
      "get": {
        "summary": "Retrieve Cilium Enterprise health",
        "responses": {
          "200": {
            "description": "Success"
          },
          "404": {
            "description": "Cilium Enterprise API is not available",
            "x-go-name": "Disabled"
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "x-go-name": "Failure"
          }
        }
      }
    },
    "/network/attachment": {
      "get": {
        "tags": [
          "network"
        ],
        "summary": "Retrieve the network attachment for a pod",
        "parameters": [
          {
            "type": "string",
            "description": "Kubernetes pod name for which to query the network attachment",
            "name": "pod-name",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "description": "Kubernetes pod namespace for which to query the network attachment",
            "name": "pod-namespace",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/NetworkAttachmentList"
            }
          },
          "500": {
            "description": "Network attachment error",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "x-go-name": "Failure"
          },
          "501": {
            "description": "Network attachment feature is disabled",
            "x-go-name": "Disabled"
          }
        }
      }
    }
  },
  "definitions": {
    "EnterpriseDaemonConfiguration": {
      "description": "The current configuration of any enterprise-only features",
      "type": "object",
      "properties": {
        "multi-network": {
          "description": "Indicates whether multi-network support is enabled",
          "type": "boolean"
        }
      }
    },
    "Error": {
      "type": "string"
    },
    "NetworkAttachmentElement": {
      "description": "A network attachment",
      "type": "object",
      "required": [
        "name"
      ],
      "properties": {
        "ipam": {
          "description": "IPAM parameters",
          "$ref": "#/definitions/NetworkAttachmentIPAMParameters"
        },
        "name": {
          "description": "Name of the network this pod is attached to",
          "type": "string"
        },
        "routes": {
          "description": "Network routes to set up for this network attachment inside the pod",
          "type": "array",
          "items": {
            "$ref": "#/definitions/NetworkAttachmentRoute"
          }
        }
      }
    },
    "NetworkAttachmentIPAMParameters": {
      "description": "IPAM parameters of a network attachment",
      "type": "object",
      "properties": {
        "ipam-pool": {
          "description": "Name of the IPAM pool this network attachment allocates from",
          "type": "string"
        }
      }
    },
    "NetworkAttachmentList": {
      "description": "List of network attachments",
      "properties": {
        "attachments": {
          "description": "Networks this pod is attached to",
          "type": "array",
          "items": {
            "$ref": "#/definitions/NetworkAttachmentElement"
          }
        },
        "pod-name": {
          "description": "Name of the pod which is attached to these networks",
          "type": "string"
        },
        "pod-namespace": {
          "description": "Namespace of the pod which is attached to these networks",
          "type": "string"
        }
      }
    },
    "NetworkAttachmentRoute": {
      "description": "Route for a network attachment",
      "type": "object",
      "properties": {
        "destination": {
          "description": "Route destination",
          "type": "string"
        },
        "gateway": {
          "description": "Route gateway",
          "type": "string"
        }
      }
    }
  },
  "parameters": {
    "network-pod-name": {
      "type": "string",
      "description": "Kubernetes pod name for which to query the network attachment",
      "name": "pod-name",
      "in": "query",
      "required": true
    },
    "network-pod-namespace": {
      "type": "string",
      "description": "Kubernetes pod namespace for which to query the network attachment",
      "name": "pod-namespace",
      "in": "query",
      "required": true
    }
  },
  "x-schemes": [
    "unix"
  ]
}`))
}
