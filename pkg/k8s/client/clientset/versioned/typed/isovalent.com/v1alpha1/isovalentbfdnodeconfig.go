// SPDX-License-Identifier: Apache-2.0
// Copyright Authors of Cilium

// Code generated by client-gen. DO NOT EDIT.

package v1alpha1

import (
	"context"

	v1alpha1 "github.com/cilium/cilium/pkg/k8s/apis/isovalent.com/v1alpha1"
	scheme "github.com/cilium/cilium/pkg/k8s/client/clientset/versioned/scheme"
	v1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	types "k8s.io/apimachinery/pkg/types"
	watch "k8s.io/apimachinery/pkg/watch"
	gentype "k8s.io/client-go/gentype"
)

// IsovalentBFDNodeConfigsGetter has a method to return a IsovalentBFDNodeConfigInterface.
// A group's client should implement this interface.
type IsovalentBFDNodeConfigsGetter interface {
	IsovalentBFDNodeConfigs() IsovalentBFDNodeConfigInterface
}

// IsovalentBFDNodeConfigInterface has methods to work with IsovalentBFDNodeConfig resources.
type IsovalentBFDNodeConfigInterface interface {
	Create(ctx context.Context, isovalentBFDNodeConfig *v1alpha1.IsovalentBFDNodeConfig, opts v1.CreateOptions) (*v1alpha1.IsovalentBFDNodeConfig, error)
	Update(ctx context.Context, isovalentBFDNodeConfig *v1alpha1.IsovalentBFDNodeConfig, opts v1.UpdateOptions) (*v1alpha1.IsovalentBFDNodeConfig, error)
	// Add a +genclient:noStatus comment above the type to avoid generating UpdateStatus().
	UpdateStatus(ctx context.Context, isovalentBFDNodeConfig *v1alpha1.IsovalentBFDNodeConfig, opts v1.UpdateOptions) (*v1alpha1.IsovalentBFDNodeConfig, error)
	Delete(ctx context.Context, name string, opts v1.DeleteOptions) error
	DeleteCollection(ctx context.Context, opts v1.DeleteOptions, listOpts v1.ListOptions) error
	Get(ctx context.Context, name string, opts v1.GetOptions) (*v1alpha1.IsovalentBFDNodeConfig, error)
	List(ctx context.Context, opts v1.ListOptions) (*v1alpha1.IsovalentBFDNodeConfigList, error)
	Watch(ctx context.Context, opts v1.ListOptions) (watch.Interface, error)
	Patch(ctx context.Context, name string, pt types.PatchType, data []byte, opts v1.PatchOptions, subresources ...string) (result *v1alpha1.IsovalentBFDNodeConfig, err error)
	IsovalentBFDNodeConfigExpansion
}

// isovalentBFDNodeConfigs implements IsovalentBFDNodeConfigInterface
type isovalentBFDNodeConfigs struct {
	*gentype.ClientWithList[*v1alpha1.IsovalentBFDNodeConfig, *v1alpha1.IsovalentBFDNodeConfigList]
}

// newIsovalentBFDNodeConfigs returns a IsovalentBFDNodeConfigs
func newIsovalentBFDNodeConfigs(c *IsovalentV1alpha1Client) *isovalentBFDNodeConfigs {
	return &isovalentBFDNodeConfigs{
		gentype.NewClientWithList[*v1alpha1.IsovalentBFDNodeConfig, *v1alpha1.IsovalentBFDNodeConfigList](
			"isovalentbfdnodeconfigs",
			c.RESTClient(),
			scheme.ParameterCodec,
			"",
			func() *v1alpha1.IsovalentBFDNodeConfig { return &v1alpha1.IsovalentBFDNodeConfig{} },
			func() *v1alpha1.IsovalentBFDNodeConfigList { return &v1alpha1.IsovalentBFDNodeConfigList{} }),
	}
}
