// SPDX-License-Identifier: Apache-2.0
// Copyright Authors of Cilium

// Code generated by client-gen. DO NOT EDIT.

package v1alpha1

import (
	"context"

	v1alpha1 "github.com/cilium/cilium/pkg/k8s/apis/isovalent.com/v1alpha1"
	scheme "github.com/cilium/cilium/pkg/k8s/client/clientset/versioned/scheme"
	v1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	types "k8s.io/apimachinery/pkg/types"
	watch "k8s.io/apimachinery/pkg/watch"
	gentype "k8s.io/client-go/gentype"
)

// IsovalentMeshEndpointsGetter has a method to return a IsovalentMeshEndpointInterface.
// A group's client should implement this interface.
type IsovalentMeshEndpointsGetter interface {
	IsovalentMeshEndpoints(namespace string) IsovalentMeshEndpointInterface
}

// IsovalentMeshEndpointInterface has methods to work with IsovalentMeshEndpoint resources.
type IsovalentMeshEndpointInterface interface {
	Create(ctx context.Context, isovalentMeshEndpoint *v1alpha1.IsovalentMeshEndpoint, opts v1.CreateOptions) (*v1alpha1.IsovalentMeshEndpoint, error)
	Update(ctx context.Context, isovalentMeshEndpoint *v1alpha1.IsovalentMeshEndpoint, opts v1.UpdateOptions) (*v1alpha1.IsovalentMeshEndpoint, error)
	Delete(ctx context.Context, name string, opts v1.DeleteOptions) error
	DeleteCollection(ctx context.Context, opts v1.DeleteOptions, listOpts v1.ListOptions) error
	Get(ctx context.Context, name string, opts v1.GetOptions) (*v1alpha1.IsovalentMeshEndpoint, error)
	List(ctx context.Context, opts v1.ListOptions) (*v1alpha1.IsovalentMeshEndpointList, error)
	Watch(ctx context.Context, opts v1.ListOptions) (watch.Interface, error)
	Patch(ctx context.Context, name string, pt types.PatchType, data []byte, opts v1.PatchOptions, subresources ...string) (result *v1alpha1.IsovalentMeshEndpoint, err error)
	IsovalentMeshEndpointExpansion
}

// isovalentMeshEndpoints implements IsovalentMeshEndpointInterface
type isovalentMeshEndpoints struct {
	*gentype.ClientWithList[*v1alpha1.IsovalentMeshEndpoint, *v1alpha1.IsovalentMeshEndpointList]
}

// newIsovalentMeshEndpoints returns a IsovalentMeshEndpoints
func newIsovalentMeshEndpoints(c *IsovalentV1alpha1Client, namespace string) *isovalentMeshEndpoints {
	return &isovalentMeshEndpoints{
		gentype.NewClientWithList[*v1alpha1.IsovalentMeshEndpoint, *v1alpha1.IsovalentMeshEndpointList](
			"isovalentmeshendpoints",
			c.RESTClient(),
			scheme.ParameterCodec,
			namespace,
			func() *v1alpha1.IsovalentMeshEndpoint { return &v1alpha1.IsovalentMeshEndpoint{} },
			func() *v1alpha1.IsovalentMeshEndpointList { return &v1alpha1.IsovalentMeshEndpointList{} }),
	}
}
