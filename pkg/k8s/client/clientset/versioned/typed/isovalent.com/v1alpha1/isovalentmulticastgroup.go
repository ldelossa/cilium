// SPDX-License-Identifier: Apache-2.0
// Copyright Authors of Cilium

// Code generated by client-gen. DO NOT EDIT.

package v1alpha1

import (
	"context"

	v1alpha1 "github.com/cilium/cilium/pkg/k8s/apis/isovalent.com/v1alpha1"
	scheme "github.com/cilium/cilium/pkg/k8s/client/clientset/versioned/scheme"
	v1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	types "k8s.io/apimachinery/pkg/types"
	watch "k8s.io/apimachinery/pkg/watch"
	gentype "k8s.io/client-go/gentype"
)

// IsovalentMulticastGroupsGetter has a method to return a IsovalentMulticastGroupInterface.
// A group's client should implement this interface.
type IsovalentMulticastGroupsGetter interface {
	IsovalentMulticastGroups() IsovalentMulticastGroupInterface
}

// IsovalentMulticastGroupInterface has methods to work with IsovalentMulticastGroup resources.
type IsovalentMulticastGroupInterface interface {
	Create(ctx context.Context, isovalentMulticastGroup *v1alpha1.IsovalentMulticastGroup, opts v1.CreateOptions) (*v1alpha1.IsovalentMulticastGroup, error)
	Update(ctx context.Context, isovalentMulticastGroup *v1alpha1.IsovalentMulticastGroup, opts v1.UpdateOptions) (*v1alpha1.IsovalentMulticastGroup, error)
	Delete(ctx context.Context, name string, opts v1.DeleteOptions) error
	DeleteCollection(ctx context.Context, opts v1.DeleteOptions, listOpts v1.ListOptions) error
	Get(ctx context.Context, name string, opts v1.GetOptions) (*v1alpha1.IsovalentMulticastGroup, error)
	List(ctx context.Context, opts v1.ListOptions) (*v1alpha1.IsovalentMulticastGroupList, error)
	Watch(ctx context.Context, opts v1.ListOptions) (watch.Interface, error)
	Patch(ctx context.Context, name string, pt types.PatchType, data []byte, opts v1.PatchOptions, subresources ...string) (result *v1alpha1.IsovalentMulticastGroup, err error)
	IsovalentMulticastGroupExpansion
}

// isovalentMulticastGroups implements IsovalentMulticastGroupInterface
type isovalentMulticastGroups struct {
	*gentype.ClientWithList[*v1alpha1.IsovalentMulticastGroup, *v1alpha1.IsovalentMulticastGroupList]
}

// newIsovalentMulticastGroups returns a IsovalentMulticastGroups
func newIsovalentMulticastGroups(c *IsovalentV1alpha1Client) *isovalentMulticastGroups {
	return &isovalentMulticastGroups{
		gentype.NewClientWithList[*v1alpha1.IsovalentMulticastGroup, *v1alpha1.IsovalentMulticastGroupList](
			"isovalentmulticastgroups",
			c.RESTClient(),
			scheme.ParameterCodec,
			"",
			func() *v1alpha1.IsovalentMulticastGroup { return &v1alpha1.IsovalentMulticastGroup{} },
			func() *v1alpha1.IsovalentMulticastGroupList { return &v1alpha1.IsovalentMulticastGroupList{} }),
	}
}
