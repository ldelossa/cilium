// SPDX-License-Identifier: Apache-2.0
// Copyright Authors of Cilium

// Code generated by client-gen. DO NOT EDIT.

package v1

import (
	"context"

	v1 "github.com/cilium/cilium/pkg/k8s/apis/isovalent.com/v1"
	scheme "github.com/cilium/cilium/pkg/k8s/client/clientset/versioned/scheme"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	types "k8s.io/apimachinery/pkg/types"
	watch "k8s.io/apimachinery/pkg/watch"
	gentype "k8s.io/client-go/gentype"
)

// IsovalentEgressGatewayPoliciesGetter has a method to return a IsovalentEgressGatewayPolicyInterface.
// A group's client should implement this interface.
type IsovalentEgressGatewayPoliciesGetter interface {
	IsovalentEgressGatewayPolicies() IsovalentEgressGatewayPolicyInterface
}

// IsovalentEgressGatewayPolicyInterface has methods to work with IsovalentEgressGatewayPolicy resources.
type IsovalentEgressGatewayPolicyInterface interface {
	Create(ctx context.Context, isovalentEgressGatewayPolicy *v1.IsovalentEgressGatewayPolicy, opts metav1.CreateOptions) (*v1.IsovalentEgressGatewayPolicy, error)
	Update(ctx context.Context, isovalentEgressGatewayPolicy *v1.IsovalentEgressGatewayPolicy, opts metav1.UpdateOptions) (*v1.IsovalentEgressGatewayPolicy, error)
	// Add a +genclient:noStatus comment above the type to avoid generating UpdateStatus().
	UpdateStatus(ctx context.Context, isovalentEgressGatewayPolicy *v1.IsovalentEgressGatewayPolicy, opts metav1.UpdateOptions) (*v1.IsovalentEgressGatewayPolicy, error)
	Delete(ctx context.Context, name string, opts metav1.DeleteOptions) error
	DeleteCollection(ctx context.Context, opts metav1.DeleteOptions, listOpts metav1.ListOptions) error
	Get(ctx context.Context, name string, opts metav1.GetOptions) (*v1.IsovalentEgressGatewayPolicy, error)
	List(ctx context.Context, opts metav1.ListOptions) (*v1.IsovalentEgressGatewayPolicyList, error)
	Watch(ctx context.Context, opts metav1.ListOptions) (watch.Interface, error)
	Patch(ctx context.Context, name string, pt types.PatchType, data []byte, opts metav1.PatchOptions, subresources ...string) (result *v1.IsovalentEgressGatewayPolicy, err error)
	IsovalentEgressGatewayPolicyExpansion
}

// isovalentEgressGatewayPolicies implements IsovalentEgressGatewayPolicyInterface
type isovalentEgressGatewayPolicies struct {
	*gentype.ClientWithList[*v1.IsovalentEgressGatewayPolicy, *v1.IsovalentEgressGatewayPolicyList]
}

// newIsovalentEgressGatewayPolicies returns a IsovalentEgressGatewayPolicies
func newIsovalentEgressGatewayPolicies(c *IsovalentV1Client) *isovalentEgressGatewayPolicies {
	return &isovalentEgressGatewayPolicies{
		gentype.NewClientWithList[*v1.IsovalentEgressGatewayPolicy, *v1.IsovalentEgressGatewayPolicyList](
			"isovalentegressgatewaypolicies",
			c.RESTClient(),
			scheme.ParameterCodec,
			"",
			func() *v1.IsovalentEgressGatewayPolicy { return &v1.IsovalentEgressGatewayPolicy{} },
			func() *v1.IsovalentEgressGatewayPolicyList { return &v1.IsovalentEgressGatewayPolicyList{} }),
	}
}
