// SPDX-License-Identifier: Apache-2.0
// Copyright Authors of Cilium

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "github.com/cilium/cilium/pkg/k8s/apis/isovalent.com/v1alpha1"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/listers"
	"k8s.io/client-go/tools/cache"
)

// IsovalentMulticastNodeLister helps list IsovalentMulticastNodes.
// All objects returned here must be treated as read-only.
type IsovalentMulticastNodeLister interface {
	// List lists all IsovalentMulticastNodes in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.IsovalentMulticastNode, err error)
	// Get retrieves the IsovalentMulticastNode from the index for a given name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.IsovalentMulticastNode, error)
	IsovalentMulticastNodeListerExpansion
}

// isovalentMulticastNodeLister implements the IsovalentMulticastNodeLister interface.
type isovalentMulticastNodeLister struct {
	listers.ResourceIndexer[*v1alpha1.IsovalentMulticastNode]
}

// NewIsovalentMulticastNodeLister returns a new IsovalentMulticastNodeLister.
func NewIsovalentMulticastNodeLister(indexer cache.Indexer) IsovalentMulticastNodeLister {
	return &isovalentMulticastNodeLister{listers.New[*v1alpha1.IsovalentMulticastNode](indexer, v1alpha1.Resource("isovalentmulticastnode"))}
}
