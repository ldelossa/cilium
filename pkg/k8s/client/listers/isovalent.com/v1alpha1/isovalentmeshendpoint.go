// SPDX-License-Identifier: Apache-2.0
// Copyright Authors of Cilium

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "github.com/cilium/cilium/pkg/k8s/apis/isovalent.com/v1alpha1"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/listers"
	"k8s.io/client-go/tools/cache"
)

// IsovalentMeshEndpointLister helps list IsovalentMeshEndpoints.
// All objects returned here must be treated as read-only.
type IsovalentMeshEndpointLister interface {
	// List lists all IsovalentMeshEndpoints in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.IsovalentMeshEndpoint, err error)
	// IsovalentMeshEndpoints returns an object that can list and get IsovalentMeshEndpoints.
	IsovalentMeshEndpoints(namespace string) IsovalentMeshEndpointNamespaceLister
	IsovalentMeshEndpointListerExpansion
}

// isovalentMeshEndpointLister implements the IsovalentMeshEndpointLister interface.
type isovalentMeshEndpointLister struct {
	listers.ResourceIndexer[*v1alpha1.IsovalentMeshEndpoint]
}

// NewIsovalentMeshEndpointLister returns a new IsovalentMeshEndpointLister.
func NewIsovalentMeshEndpointLister(indexer cache.Indexer) IsovalentMeshEndpointLister {
	return &isovalentMeshEndpointLister{listers.New[*v1alpha1.IsovalentMeshEndpoint](indexer, v1alpha1.Resource("isovalentmeshendpoint"))}
}

// IsovalentMeshEndpoints returns an object that can list and get IsovalentMeshEndpoints.
func (s *isovalentMeshEndpointLister) IsovalentMeshEndpoints(namespace string) IsovalentMeshEndpointNamespaceLister {
	return isovalentMeshEndpointNamespaceLister{listers.NewNamespaced[*v1alpha1.IsovalentMeshEndpoint](s.ResourceIndexer, namespace)}
}

// IsovalentMeshEndpointNamespaceLister helps list and get IsovalentMeshEndpoints.
// All objects returned here must be treated as read-only.
type IsovalentMeshEndpointNamespaceLister interface {
	// List lists all IsovalentMeshEndpoints in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.IsovalentMeshEndpoint, err error)
	// Get retrieves the IsovalentMeshEndpoint from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.IsovalentMeshEndpoint, error)
	IsovalentMeshEndpointNamespaceListerExpansion
}

// isovalentMeshEndpointNamespaceLister implements the IsovalentMeshEndpointNamespaceLister
// interface.
type isovalentMeshEndpointNamespaceLister struct {
	listers.ResourceIndexer[*v1alpha1.IsovalentMeshEndpoint]
}
